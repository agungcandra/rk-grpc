// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: api/v1/rk_common_service.proto

package rk_grpc_common_v1

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GC request, operator must be set
type GCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GCRequest) Reset() {
	*x = GCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCRequest) ProtoMessage() {}

func (x *GCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCRequest.ProtoReflect.Descriptor instead.
func (*GCRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{0}
}

// GC response, memory stats would be returned
type GCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemStatsBeforeGc *MemStats `protobuf:"bytes,1,opt,name=mem_stats_before_gc,json=memStatsBeforeGc,proto3" json:"mem_stats_before_gc,omitempty"`
	MemStatsAfterGc  *MemStats `protobuf:"bytes,2,opt,name=mem_stats_after_gc,json=memStatsAfterGc,proto3" json:"mem_stats_after_gc,omitempty"`
}

func (x *GCResponse) Reset() {
	*x = GCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCResponse) ProtoMessage() {}

func (x *GCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCResponse.ProtoReflect.Descriptor instead.
func (*GCResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{1}
}

func (x *GCResponse) GetMemStatsBeforeGc() *MemStats {
	if x != nil {
		return x.MemStatsBeforeGc
	}
	return nil
}

func (x *GCResponse) GetMemStatsAfterGc() *MemStats {
	if x != nil {
		return x.MemStatsAfterGc
	}
	return nil
}

// Memory stats
type MemStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Alloc is bytes of allocated heap objects.
	MemAllocByte uint32 `protobuf:"varint,1,opt,name=mem_alloc_byte,json=memAllocByte,proto3" json:"mem_alloc_byte,omitempty"`
	// Sys is the total bytes of memory obtained from the OS.
	SysAllocByte uint32 `protobuf:"varint,2,opt,name=sys_alloc_byte,json=sysAllocByte,proto3" json:"sys_alloc_byte,omitempty"`
	// memory usage
	MemUsagePercentage float32 `protobuf:"fixed32,3,opt,name=mem_usage_percentage,json=memUsagePercentage,proto3" json:"mem_usage_percentage,omitempty"`
	// LastGC is the time the last garbage collection finished.
	// Represent as RFC3339 time format
	LastGcTimestamp string `protobuf:"bytes,4,opt,name=last_gc_timestamp,json=lastGcTimestamp,proto3" json:"last_gc_timestamp,omitempty"`
	// The number of completed GC cycles.
	GcCountTotal uint32 `protobuf:"varint,5,opt,name=gc_count_total,json=gcCountTotal,proto3" json:"gc_count_total,omitempty"`
	/// The number of GC cycles that were forced by
	// the application calling the GC function.
	ForceGcCount uint32 `protobuf:"varint,6,opt,name=force_gc_count,json=forceGcCount,proto3" json:"force_gc_count,omitempty"`
}

func (x *MemStats) Reset() {
	*x = MemStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemStats) ProtoMessage() {}

func (x *MemStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemStats.ProtoReflect.Descriptor instead.
func (*MemStats) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{2}
}

func (x *MemStats) GetMemAllocByte() uint32 {
	if x != nil {
		return x.MemAllocByte
	}
	return 0
}

func (x *MemStats) GetSysAllocByte() uint32 {
	if x != nil {
		return x.SysAllocByte
	}
	return 0
}

func (x *MemStats) GetMemUsagePercentage() float32 {
	if x != nil {
		return x.MemUsagePercentage
	}
	return 0
}

func (x *MemStats) GetLastGcTimestamp() string {
	if x != nil {
		return x.LastGcTimestamp
	}
	return ""
}

func (x *MemStats) GetGcCountTotal() uint32 {
	if x != nil {
		return x.GcCountTotal
	}
	return 0
}

func (x *MemStats) GetForceGcCount() uint32 {
	if x != nil {
		return x.ForceGcCount
	}
	return 0
}

type DumpConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DumpConfigRequest) Reset() {
	*x = DumpConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpConfigRequest) ProtoMessage() {}

func (x *DumpConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpConfigRequest.ProtoReflect.Descriptor instead.
func (*DumpConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{3}
}

type DumpConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Viper []*Viper `protobuf:"bytes,1,rep,name=viper,proto3" json:"viper,omitempty"`
	Rk    []*RK    `protobuf:"bytes,2,rep,name=rk,proto3" json:"rk,omitempty"`
}

func (x *DumpConfigResponse) Reset() {
	*x = DumpConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpConfigResponse) ProtoMessage() {}

func (x *DumpConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpConfigResponse.ProtoReflect.Descriptor instead.
func (*DumpConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{4}
}

func (x *DumpConfigResponse) GetViper() []*Viper {
	if x != nil {
		return x.Viper
	}
	return nil
}

func (x *DumpConfigResponse) GetRk() []*RK {
	if x != nil {
		return x.Rk
	}
	return nil
}

type Viper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Raw  string `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *Viper) Reset() {
	*x = Viper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Viper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Viper) ProtoMessage() {}

func (x *Viper) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Viper.ProtoReflect.Descriptor instead.
func (*Viper) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{5}
}

func (x *Viper) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Viper) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

type RK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Raw  string `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *RK) Reset() {
	*x = RK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RK) ProtoMessage() {}

func (x *RK) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RK.ProtoReflect.Descriptor instead.
func (*RK) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{6}
}

func (x *RK) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RK) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

type HealthyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthyRequest) Reset() {
	*x = HealthyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthyRequest) ProtoMessage() {}

func (x *HealthyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthyRequest.ProtoReflect.Descriptor instead.
func (*HealthyRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{7}
}

type HealthyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy bool `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
}

func (x *HealthyResponse) Reset() {
	*x = HealthyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthyResponse) ProtoMessage() {}

func (x *HealthyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthyResponse.ProtoReflect.Descriptor instead.
func (*HealthyResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{8}
}

func (x *HealthyResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

type InfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{9}
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid         string `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Username    string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	StartTime   string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	UpTimeSec   uint32 `protobuf:"varint,5,opt,name=up_time_sec,json=upTimeSec,proto3" json:"up_time_sec,omitempty"`
	UpTimeStr   string `protobuf:"bytes,6,opt,name=up_time_str,json=upTimeStr,proto3" json:"up_time_str,omitempty"`
	Application string `protobuf:"bytes,7,opt,name=application,proto3" json:"application,omitempty"`
	Realm       string `protobuf:"bytes,8,opt,name=realm,proto3" json:"realm,omitempty"`
	Region      string `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`
	Az          string `protobuf:"bytes,10,opt,name=az,proto3" json:"az,omitempty"`
	Domain      string `protobuf:"bytes,11,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{10}
}

func (x *Info) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Info) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *Info) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Info) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Info) GetUpTimeSec() uint32 {
	if x != nil {
		return x.UpTimeSec
	}
	return 0
}

func (x *Info) GetUpTimeStr() string {
	if x != nil {
		return x.UpTimeStr
	}
	return ""
}

func (x *Info) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

func (x *Info) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *Info) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Info) GetAz() string {
	if x != nil {
		return x.Az
	}
	return ""
}

func (x *Info) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type InfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Info `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *InfoResponse) Reset() {
	*x = InfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponse) ProtoMessage() {}

func (x *InfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponse.ProtoReflect.Descriptor instead.
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{11}
}

func (x *InfoResponse) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_api_v1_rk_common_service_proto protoreflect.FileDescriptor

var file_api_v1_rk_common_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0b,
	0x0a, 0x09, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7e, 0x0a, 0x0a, 0x47,
	0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x13, 0x6d, 0x65, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x67, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x10, 0x6d, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x47, 0x63, 0x12, 0x36, 0x0a, 0x12, 0x6d, 0x65, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x67, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x4d, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x47, 0x63, 0x22, 0x80, 0x02, 0x0a, 0x08,
	0x4d, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x5f,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x42, 0x79, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x42, 0x79, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x12, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x67,
	0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x47, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x63, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x5f, 0x67, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x13,
	0x0a, 0x11, 0x44, 0x75, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x12, 0x44, 0x75, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x76, 0x69, 0x70,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x56, 0x69, 0x70, 0x65, 0x72,
	0x52, 0x05, 0x76, 0x69, 0x70, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x02, 0x72, 0x6b, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x03, 0x2e, 0x52, 0x4b, 0x52, 0x02, 0x72, 0x6b, 0x22, 0x2d, 0x0a, 0x05,
	0x56, 0x69, 0x70, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x2a, 0x0a, 0x02, 0x52,
	0x4b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x10, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x0f, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9d, 0x02, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0b, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x1e, 0x0a,
	0x0b, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x61, 0x7a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x61, 0x7a, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x29, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x32, 0x91, 0x02, 0x0a, 0x0f, 0x52, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x02, 0x47, 0x43, 0x12, 0x0a, 0x2e, 0x47, 0x43, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x47, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x6b, 0x2f, 0x67, 0x63, 0x12, 0x4c, 0x0a, 0x0a, 0x44, 0x75, 0x6d, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x2e, 0x44, 0x75, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x44, 0x75, 0x6d, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6b, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6b, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x44,
	0x0a, 0x07, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x0f, 0x2e, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6b, 0x2f, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x79, 0x42, 0x1a, 0x5a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x6b, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_rk_common_service_proto_rawDescOnce sync.Once
	file_api_v1_rk_common_service_proto_rawDescData = file_api_v1_rk_common_service_proto_rawDesc
)

func file_api_v1_rk_common_service_proto_rawDescGZIP() []byte {
	file_api_v1_rk_common_service_proto_rawDescOnce.Do(func() {
		file_api_v1_rk_common_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_rk_common_service_proto_rawDescData)
	})
	return file_api_v1_rk_common_service_proto_rawDescData
}

var file_api_v1_rk_common_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_v1_rk_common_service_proto_goTypes = []interface{}{
	(*GCRequest)(nil),          // 0: GCRequest
	(*GCResponse)(nil),         // 1: GCResponse
	(*MemStats)(nil),           // 2: MemStats
	(*DumpConfigRequest)(nil),  // 3: DumpConfigRequest
	(*DumpConfigResponse)(nil), // 4: DumpConfigResponse
	(*Viper)(nil),              // 5: Viper
	(*RK)(nil),                 // 6: RK
	(*HealthyRequest)(nil),     // 7: HealthyRequest
	(*HealthyResponse)(nil),    // 8: HealthyResponse
	(*InfoRequest)(nil),        // 9: InfoRequest
	(*Info)(nil),               // 10: Info
	(*InfoResponse)(nil),       // 11: InfoResponse
}
var file_api_v1_rk_common_service_proto_depIdxs = []int32{
	2,  // 0: GCResponse.mem_stats_before_gc:type_name -> MemStats
	2,  // 1: GCResponse.mem_stats_after_gc:type_name -> MemStats
	5,  // 2: DumpConfigResponse.viper:type_name -> Viper
	6,  // 3: DumpConfigResponse.rk:type_name -> RK
	10, // 4: InfoResponse.info:type_name -> Info
	0,  // 5: RkCommonService.GC:input_type -> GCRequest
	3,  // 6: RkCommonService.DumpConfig:input_type -> DumpConfigRequest
	9,  // 7: RkCommonService.Info:input_type -> InfoRequest
	7,  // 8: RkCommonService.Healthy:input_type -> HealthyRequest
	1,  // 9: RkCommonService.GC:output_type -> GCResponse
	4,  // 10: RkCommonService.DumpConfig:output_type -> DumpConfigResponse
	11, // 11: RkCommonService.Info:output_type -> InfoResponse
	8,  // 12: RkCommonService.Healthy:output_type -> HealthyResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_v1_rk_common_service_proto_init() }
func file_api_v1_rk_common_service_proto_init() {
	if File_api_v1_rk_common_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_rk_common_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Viper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_rk_common_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_rk_common_service_proto_goTypes,
		DependencyIndexes: file_api_v1_rk_common_service_proto_depIdxs,
		MessageInfos:      file_api_v1_rk_common_service_proto_msgTypes,
	}.Build()
	File_api_v1_rk_common_service_proto = out.File
	file_api_v1_rk_common_service_proto_rawDesc = nil
	file_api_v1_rk_common_service_proto_goTypes = nil
	file_api_v1_rk_common_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RkCommonServiceClient is the client API for RkCommonService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RkCommonServiceClient interface {
	// GC Stub
	GC(ctx context.Context, in *GCRequest, opts ...grpc.CallOption) (*GCResponse, error)
	// DumpConfig Stub
	DumpConfig(ctx context.Context, in *DumpConfigRequest, opts ...grpc.CallOption) (*DumpConfigResponse, error)
	// Info Stub
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	// Healthy Stub
	Healthy(ctx context.Context, in *HealthyRequest, opts ...grpc.CallOption) (*HealthyResponse, error)
}

type rkCommonServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRkCommonServiceClient(cc grpc.ClientConnInterface) RkCommonServiceClient {
	return &rkCommonServiceClient{cc}
}

func (c *rkCommonServiceClient) GC(ctx context.Context, in *GCRequest, opts ...grpc.CallOption) (*GCResponse, error) {
	out := new(GCResponse)
	err := c.cc.Invoke(ctx, "/RkCommonService/GC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkCommonServiceClient) DumpConfig(ctx context.Context, in *DumpConfigRequest, opts ...grpc.CallOption) (*DumpConfigResponse, error) {
	out := new(DumpConfigResponse)
	err := c.cc.Invoke(ctx, "/RkCommonService/DumpConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkCommonServiceClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/RkCommonService/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkCommonServiceClient) Healthy(ctx context.Context, in *HealthyRequest, opts ...grpc.CallOption) (*HealthyResponse, error) {
	out := new(HealthyResponse)
	err := c.cc.Invoke(ctx, "/RkCommonService/Healthy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RkCommonServiceServer is the server API for RkCommonService service.
type RkCommonServiceServer interface {
	// GC Stub
	GC(context.Context, *GCRequest) (*GCResponse, error)
	// DumpConfig Stub
	DumpConfig(context.Context, *DumpConfigRequest) (*DumpConfigResponse, error)
	// Info Stub
	Info(context.Context, *InfoRequest) (*InfoResponse, error)
	// Healthy Stub
	Healthy(context.Context, *HealthyRequest) (*HealthyResponse, error)
}

// UnimplementedRkCommonServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRkCommonServiceServer struct {
}

func (*UnimplementedRkCommonServiceServer) GC(context.Context, *GCRequest) (*GCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GC not implemented")
}
func (*UnimplementedRkCommonServiceServer) DumpConfig(context.Context, *DumpConfigRequest) (*DumpConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DumpConfig not implemented")
}
func (*UnimplementedRkCommonServiceServer) Info(context.Context, *InfoRequest) (*InfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}
func (*UnimplementedRkCommonServiceServer) Healthy(context.Context, *HealthyRequest) (*HealthyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Healthy not implemented")
}

func RegisterRkCommonServiceServer(s *grpc.Server, srv RkCommonServiceServer) {
	s.RegisterService(&_RkCommonService_serviceDesc, srv)
}

func _RkCommonService_GC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkCommonServiceServer).GC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RkCommonService/GC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkCommonServiceServer).GC(ctx, req.(*GCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkCommonService_DumpConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DumpConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkCommonServiceServer).DumpConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RkCommonService/DumpConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkCommonServiceServer).DumpConfig(ctx, req.(*DumpConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkCommonService_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkCommonServiceServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RkCommonService/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkCommonServiceServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkCommonService_Healthy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkCommonServiceServer).Healthy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RkCommonService/Healthy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkCommonServiceServer).Healthy(ctx, req.(*HealthyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RkCommonService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RkCommonService",
	HandlerType: (*RkCommonServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GC",
			Handler:    _RkCommonService_GC_Handler,
		},
		{
			MethodName: "DumpConfig",
			Handler:    _RkCommonService_DumpConfig_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _RkCommonService_Info_Handler,
		},
		{
			MethodName: "Healthy",
			Handler:    _RkCommonService_Healthy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/rk_common_service.proto",
}
