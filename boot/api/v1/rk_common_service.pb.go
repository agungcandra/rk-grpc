// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: api/v1/rk_common_service.proto

package rk_grpc_common_v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GC request, operator must be set
type GCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GCRequest) Reset() {
	*x = GCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCRequest) ProtoMessage() {}

func (x *GCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCRequest.ProtoReflect.Descriptor instead.
func (*GCRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{0}
}

// GC response, memory stats would be returned
type GCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemStatsBeforeGc *MemStats `protobuf:"bytes,1,opt,name=mem_stats_before_gc,json=memStatsBeforeGc,proto3" json:"mem_stats_before_gc,omitempty"`
	MemStatsAfterGc  *MemStats `protobuf:"bytes,2,opt,name=mem_stats_after_gc,json=memStatsAfterGc,proto3" json:"mem_stats_after_gc,omitempty"`
}

func (x *GCResponse) Reset() {
	*x = GCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCResponse) ProtoMessage() {}

func (x *GCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCResponse.ProtoReflect.Descriptor instead.
func (*GCResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{1}
}

func (x *GCResponse) GetMemStatsBeforeGc() *MemStats {
	if x != nil {
		return x.MemStatsBeforeGc
	}
	return nil
}

func (x *GCResponse) GetMemStatsAfterGc() *MemStats {
	if x != nil {
		return x.MemStatsAfterGc
	}
	return nil
}

// Memory stats
type MemStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Alloc is bytes of allocated heap objects.
	MemAllocByte uint32 `protobuf:"varint,1,opt,name=mem_alloc_byte,json=memAllocByte,proto3" json:"mem_alloc_byte,omitempty"`
	// Sys is the total bytes of memory obtained from the OS.
	SysAllocByte uint32 `protobuf:"varint,2,opt,name=sys_alloc_byte,json=sysAllocByte,proto3" json:"sys_alloc_byte,omitempty"`
	// memory usage
	MemUsagePercentage float32 `protobuf:"fixed32,3,opt,name=mem_usage_percentage,json=memUsagePercentage,proto3" json:"mem_usage_percentage,omitempty"`
	// LastGC is the time the last garbage collection finished.
	// Represent as RFC3339 time format
	LastGcTimestamp string `protobuf:"bytes,4,opt,name=last_gc_timestamp,json=lastGcTimestamp,proto3" json:"last_gc_timestamp,omitempty"`
	// The number of completed GC cycles.
	GcCountTotal uint32 `protobuf:"varint,5,opt,name=gc_count_total,json=gcCountTotal,proto3" json:"gc_count_total,omitempty"`
	/// The number of GC cycles that were forced by
	// the application calling the GC function.
	ForceGcCount uint32 `protobuf:"varint,6,opt,name=force_gc_count,json=forceGcCount,proto3" json:"force_gc_count,omitempty"`
}

func (x *MemStats) Reset() {
	*x = MemStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemStats) ProtoMessage() {}

func (x *MemStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemStats.ProtoReflect.Descriptor instead.
func (*MemStats) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{2}
}

func (x *MemStats) GetMemAllocByte() uint32 {
	if x != nil {
		return x.MemAllocByte
	}
	return 0
}

func (x *MemStats) GetSysAllocByte() uint32 {
	if x != nil {
		return x.SysAllocByte
	}
	return 0
}

func (x *MemStats) GetMemUsagePercentage() float32 {
	if x != nil {
		return x.MemUsagePercentage
	}
	return 0
}

func (x *MemStats) GetLastGcTimestamp() string {
	if x != nil {
		return x.LastGcTimestamp
	}
	return ""
}

func (x *MemStats) GetGcCountTotal() uint32 {
	if x != nil {
		return x.GcCountTotal
	}
	return 0
}

func (x *MemStats) GetForceGcCount() uint32 {
	if x != nil {
		return x.ForceGcCount
	}
	return 0
}

type DumpConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DumpConfigRequest) Reset() {
	*x = DumpConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpConfigRequest) ProtoMessage() {}

func (x *DumpConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpConfigRequest.ProtoReflect.Descriptor instead.
func (*DumpConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{3}
}

type DumpConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Viper []*Viper `protobuf:"bytes,1,rep,name=viper,proto3" json:"viper,omitempty"`
	Rk    []*RK    `protobuf:"bytes,2,rep,name=rk,proto3" json:"rk,omitempty"`
}

func (x *DumpConfigResponse) Reset() {
	*x = DumpConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpConfigResponse) ProtoMessage() {}

func (x *DumpConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpConfigResponse.ProtoReflect.Descriptor instead.
func (*DumpConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{4}
}

func (x *DumpConfigResponse) GetViper() []*Viper {
	if x != nil {
		return x.Viper
	}
	return nil
}

func (x *DumpConfigResponse) GetRk() []*RK {
	if x != nil {
		return x.Rk
	}
	return nil
}

type Viper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Raw  string `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *Viper) Reset() {
	*x = Viper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Viper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Viper) ProtoMessage() {}

func (x *Viper) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Viper.ProtoReflect.Descriptor instead.
func (*Viper) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{5}
}

func (x *Viper) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Viper) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

type RK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Raw  string `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *RK) Reset() {
	*x = RK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RK) ProtoMessage() {}

func (x *RK) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RK.ProtoReflect.Descriptor instead.
func (*RK) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{6}
}

func (x *RK) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RK) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

type HealthyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthyRequest) Reset() {
	*x = HealthyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthyRequest) ProtoMessage() {}

func (x *HealthyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthyRequest.ProtoReflect.Descriptor instead.
func (*HealthyRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{7}
}

type HealthyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy bool `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
}

func (x *HealthyResponse) Reset() {
	*x = HealthyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthyResponse) ProtoMessage() {}

func (x *HealthyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthyResponse.ProtoReflect.Descriptor instead.
func (*HealthyResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{8}
}

func (x *HealthyResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

type InfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{9}
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid         string `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Username    string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	StartTime   string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	UpTimeSec   uint32 `protobuf:"varint,5,opt,name=up_time_sec,json=upTimeSec,proto3" json:"up_time_sec,omitempty"`
	UpTimeStr   string `protobuf:"bytes,6,opt,name=up_time_str,json=upTimeStr,proto3" json:"up_time_str,omitempty"`
	Application string `protobuf:"bytes,7,opt,name=application,proto3" json:"application,omitempty"`
	Realm       string `protobuf:"bytes,8,opt,name=realm,proto3" json:"realm,omitempty"`
	Region      string `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`
	Az          string `protobuf:"bytes,10,opt,name=az,proto3" json:"az,omitempty"`
	Domain      string `protobuf:"bytes,11,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{10}
}

func (x *Info) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Info) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *Info) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Info) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Info) GetUpTimeSec() uint32 {
	if x != nil {
		return x.UpTimeSec
	}
	return 0
}

func (x *Info) GetUpTimeStr() string {
	if x != nil {
		return x.UpTimeStr
	}
	return ""
}

func (x *Info) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

func (x *Info) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *Info) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Info) GetAz() string {
	if x != nil {
		return x.Az
	}
	return ""
}

func (x *Info) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type InfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Info `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *InfoResponse) Reset() {
	*x = InfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponse) ProtoMessage() {}

func (x *InfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponse.ProtoReflect.Descriptor instead.
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{11}
}

func (x *InfoResponse) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type ListAPIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAPIRequest) Reset() {
	*x = ListAPIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAPIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIRequest) ProtoMessage() {}

func (x *ListAPIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIRequest.ProtoReflect.Descriptor instead.
func (*ListAPIRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{12}
}

type API struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Grpc []*GRPC `protobuf:"bytes,2,rep,name=grpc,proto3" json:"grpc,omitempty"`
	Gw   []*GW   `protobuf:"bytes,3,rep,name=gw,proto3" json:"gw,omitempty"`
}

func (x *API) Reset() {
	*x = API{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *API) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*API) ProtoMessage() {}

func (x *API) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use API.ProtoReflect.Descriptor instead.
func (*API) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{13}
}

func (x *API) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *API) GetGrpc() []*GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

func (x *API) GetGw() []*GW {
	if x != nil {
		return x.Gw
	}
	return nil
}

type GRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Method  string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Type    string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Port    uint32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *GRPC) Reset() {
	*x = GRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRPC) ProtoMessage() {}

func (x *GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRPC.ProtoReflect.Descriptor instead.
func (*GRPC) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{14}
}

func (x *GRPC) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GRPC) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *GRPC) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GRPC) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GW struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port   uint32 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Sw     string `protobuf:"bytes,4,opt,name=sw,proto3" json:"sw,omitempty"`
}

func (x *GW) Reset() {
	*x = GW{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GW) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GW) ProtoMessage() {}

func (x *GW) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GW.ProtoReflect.Descriptor instead.
func (*GW) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{15}
}

func (x *GW) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GW) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GW) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *GW) GetSw() string {
	if x != nil {
		return x.Sw
	}
	return ""
}

type ListAPIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api []*API `protobuf:"bytes,1,rep,name=api,proto3" json:"api,omitempty"`
}

func (x *ListAPIResponse) Reset() {
	*x = ListAPIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAPIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIResponse) ProtoMessage() {}

func (x *ListAPIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIResponse.ProtoReflect.Descriptor instead.
func (*ListAPIResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListAPIResponse) GetApi() []*API {
	if x != nil {
		return x.Api
	}
	return nil
}

type SysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysRequest) Reset() {
	*x = SysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRequest) ProtoMessage() {}

func (x *SysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRequest.ProtoReflect.Descriptor instead.
func (*SysRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{17}
}

type SysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuPercentage float32 `protobuf:"fixed32,1,opt,name=cpu_percentage,json=cpuPercentage,proto3" json:"cpu_percentage,omitempty"`
	MemPercentage float32 `protobuf:"fixed32,2,opt,name=mem_percentage,json=memPercentage,proto3" json:"mem_percentage,omitempty"`
	MemUsageMb    uint32  `protobuf:"varint,3,opt,name=mem_usage_mb,json=memUsageMb,proto3" json:"mem_usage_mb,omitempty"`
	UpTime        string  `protobuf:"bytes,4,opt,name=up_time,json=upTime,proto3" json:"up_time,omitempty"`
}

func (x *SysResponse) Reset() {
	*x = SysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysResponse) ProtoMessage() {}

func (x *SysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysResponse.ProtoReflect.Descriptor instead.
func (*SysResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{18}
}

func (x *SysResponse) GetCpuPercentage() float32 {
	if x != nil {
		return x.CpuPercentage
	}
	return 0
}

func (x *SysResponse) GetMemPercentage() float32 {
	if x != nil {
		return x.MemPercentage
	}
	return 0
}

func (x *SysResponse) GetMemUsageMb() uint32 {
	if x != nil {
		return x.MemUsageMb
	}
	return 0
}

func (x *SysResponse) GetUpTime() string {
	if x != nil {
		return x.UpTime
	}
	return ""
}

type ReqRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqRequest) Reset() {
	*x = ReqRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRequest) ProtoMessage() {}

func (x *ReqRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRequest.ProtoReflect.Descriptor instead.
func (*ReqRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{19}
}

type ReqMetricsRK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path            string       `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	ElapsedNanoP50  float32      `protobuf:"fixed32,2,opt,name=elapsed_nano_p50,json=elapsedNanoP50,proto3" json:"elapsed_nano_p50,omitempty"`
	ElapsedNanoP90  float32      `protobuf:"fixed32,3,opt,name=elapsed_nano_p90,json=elapsedNanoP90,proto3" json:"elapsed_nano_p90,omitempty"`
	ElapsedNanoP99  float32      `protobuf:"fixed32,4,opt,name=elapsed_nano_p99,json=elapsedNanoP99,proto3" json:"elapsed_nano_p99,omitempty"`
	ElapsedNanoP999 float32      `protobuf:"fixed32,5,opt,name=elapsed_nano_p999,json=elapsedNanoP999,proto3" json:"elapsed_nano_p999,omitempty"`
	Count           uint32       `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	ResCode         []*ResCodeRK `protobuf:"bytes,7,rep,name=res_code,json=resCode,proto3" json:"res_code,omitempty"`
}

func (x *ReqMetricsRK) Reset() {
	*x = ReqMetricsRK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqMetricsRK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMetricsRK) ProtoMessage() {}

func (x *ReqMetricsRK) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMetricsRK.ProtoReflect.Descriptor instead.
func (*ReqMetricsRK) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{20}
}

func (x *ReqMetricsRK) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReqMetricsRK) GetElapsedNanoP50() float32 {
	if x != nil {
		return x.ElapsedNanoP50
	}
	return 0
}

func (x *ReqMetricsRK) GetElapsedNanoP90() float32 {
	if x != nil {
		return x.ElapsedNanoP90
	}
	return 0
}

func (x *ReqMetricsRK) GetElapsedNanoP99() float32 {
	if x != nil {
		return x.ElapsedNanoP99
	}
	return 0
}

func (x *ReqMetricsRK) GetElapsedNanoP999() float32 {
	if x != nil {
		return x.ElapsedNanoP999
	}
	return 0
}

func (x *ReqMetricsRK) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqMetricsRK) GetResCode() []*ResCodeRK {
	if x != nil {
		return x.ResCode
	}
	return nil
}

type ResCodeRK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResCode string `protobuf:"bytes,1,opt,name=res_code,json=resCode,proto3" json:"res_code,omitempty"`
	Count   uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ResCodeRK) Reset() {
	*x = ResCodeRK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCodeRK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCodeRK) ProtoMessage() {}

func (x *ResCodeRK) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCodeRK.ProtoReflect.Descriptor instead.
func (*ResCodeRK) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{21}
}

func (x *ResCodeRK) GetResCode() string {
	if x != nil {
		return x.ResCode
	}
	return ""
}

func (x *ResCodeRK) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReqResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*ReqMetricsRK `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *ReqResponse) Reset() {
	*x = ReqResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_rk_common_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqResponse) ProtoMessage() {}

func (x *ReqResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_rk_common_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqResponse.ProtoReflect.Descriptor instead.
func (*ReqResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_rk_common_service_proto_rawDescGZIP(), []int{22}
}

func (x *ReqResponse) GetMetrics() []*ReqMetricsRK {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_api_v1_rk_common_service_proto protoreflect.FileDescriptor

var file_api_v1_rk_common_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x22, 0x0b, 0x0a, 0x09, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xa2, 0x01, 0x0a, 0x0a, 0x47, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x5f, 0x67, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72,
	0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x10, 0x6d, 0x65, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x47, 0x63, 0x12, 0x48, 0x0a, 0x12, 0x6d,
	0x65, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x67,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x47, 0x63, 0x22, 0x80, 0x02, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x42, 0x79, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x5f,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x79, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x42, 0x79, 0x74, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x6d, 0x65,
	0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x67, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x47, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0e,
	0x67, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x63, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x47, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x75, 0x6d, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a,
	0x12, 0x44, 0x75, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x69, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x65, 0x72, 0x52, 0x05, 0x76, 0x69,
	0x70, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x02, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x4b, 0x52, 0x02, 0x72, 0x6b, 0x22, 0x2d, 0x0a, 0x05, 0x56, 0x69,
	0x70, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x2a, 0x0a, 0x02, 0x52, 0x4b, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x10, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x0f, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x79, 0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x9d, 0x02, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x75,
	0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0b, 0x75,
	0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x61,
	0x7a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x61, 0x7a, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x22, 0x3b, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x6d, 0x0a, 0x03, 0x41, 0x50, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x04, 0x67, 0x72, 0x70, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x6b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x52, 0x50, 0x43, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x12, 0x25, 0x0a, 0x02, 0x67, 0x77,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x57, 0x52, 0x02, 0x67,
	0x77, 0x22, 0x60, 0x0a, 0x04, 0x47, 0x52, 0x50, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0x54, 0x0a, 0x02, 0x47, 0x57, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x77, 0x22, 0x3b, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x03,
	0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x6b, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50,
	0x49, 0x52, 0x03, 0x61, 0x70, 0x69, 0x22, 0x0c, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x70, 0x75, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x63, 0x70,
	0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d,
	0x65, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x6d, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x4d, 0x62, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x0c, 0x0a,
	0x0a, 0x52, 0x65, 0x71, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9b, 0x02, 0x0a, 0x0c,
	0x52, 0x65, 0x71, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x4b, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x28, 0x0a, 0x10, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6e, 0x6f,
	0x5f, 0x70, 0x35, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x65, 0x6c, 0x61, 0x70,
	0x73, 0x65, 0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x50, 0x35, 0x30, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6c,
	0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x70, 0x39, 0x30, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x4e, 0x61, 0x6e,
	0x6f, 0x50, 0x39, 0x30, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x5f,
	0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x70, 0x39, 0x39, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x50, 0x39, 0x39, 0x12, 0x2a,
	0x0a, 0x11, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x70,
	0x39, 0x39, 0x39, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x65, 0x6c, 0x61, 0x70, 0x73,
	0x65, 0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x50, 0x39, 0x39, 0x39, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x37, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x4b,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3c, 0x0a, 0x09, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x4b, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x4b, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x32, 0xaf, 0x04, 0x0a, 0x0f, 0x52, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x02, 0x47, 0x43, 0x12, 0x1c, 0x2e, 0x72, 0x6b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x6b, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x43,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x06, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x2e, 0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x75, 0x6d, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x6b, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x75, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x72, 0x6b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x6b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x07, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x21, 0x2e, 0x72, 0x6b, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72,
	0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x04, 0x41, 0x50, 0x49, 0x53, 0x12, 0x21, 0x2e, 0x72, 0x6b, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x03, 0x53, 0x79, 0x73, 0x12, 0x1d, 0x2e, 0x72, 0x6b, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x6b, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x03, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x2e, 0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6b,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_rk_common_service_proto_rawDescOnce sync.Once
	file_api_v1_rk_common_service_proto_rawDescData = file_api_v1_rk_common_service_proto_rawDesc
)

func file_api_v1_rk_common_service_proto_rawDescGZIP() []byte {
	file_api_v1_rk_common_service_proto_rawDescOnce.Do(func() {
		file_api_v1_rk_common_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_rk_common_service_proto_rawDescData)
	})
	return file_api_v1_rk_common_service_proto_rawDescData
}

var file_api_v1_rk_common_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_v1_rk_common_service_proto_goTypes = []interface{}{
	(*GCRequest)(nil),          // 0: rk.grpc.common.v1.GCRequest
	(*GCResponse)(nil),         // 1: rk.grpc.common.v1.GCResponse
	(*MemStats)(nil),           // 2: rk.grpc.common.v1.MemStats
	(*DumpConfigRequest)(nil),  // 3: rk.grpc.common.v1.DumpConfigRequest
	(*DumpConfigResponse)(nil), // 4: rk.grpc.common.v1.DumpConfigResponse
	(*Viper)(nil),              // 5: rk.grpc.common.v1.Viper
	(*RK)(nil),                 // 6: rk.grpc.common.v1.RK
	(*HealthyRequest)(nil),     // 7: rk.grpc.common.v1.HealthyRequest
	(*HealthyResponse)(nil),    // 8: rk.grpc.common.v1.HealthyResponse
	(*InfoRequest)(nil),        // 9: rk.grpc.common.v1.InfoRequest
	(*Info)(nil),               // 10: rk.grpc.common.v1.Info
	(*InfoResponse)(nil),       // 11: rk.grpc.common.v1.InfoResponse
	(*ListAPIRequest)(nil),     // 12: rk.grpc.common.v1.ListAPIRequest
	(*API)(nil),                // 13: rk.grpc.common.v1.API
	(*GRPC)(nil),               // 14: rk.grpc.common.v1.GRPC
	(*GW)(nil),                 // 15: rk.grpc.common.v1.GW
	(*ListAPIResponse)(nil),    // 16: rk.grpc.common.v1.ListAPIResponse
	(*SysRequest)(nil),         // 17: rk.grpc.common.v1.SysRequest
	(*SysResponse)(nil),        // 18: rk.grpc.common.v1.SysResponse
	(*ReqRequest)(nil),         // 19: rk.grpc.common.v1.ReqRequest
	(*ReqMetricsRK)(nil),       // 20: rk.grpc.common.v1.ReqMetricsRK
	(*ResCodeRK)(nil),          // 21: rk.grpc.common.v1.ResCodeRK
	(*ReqResponse)(nil),        // 22: rk.grpc.common.v1.ReqResponse
}
var file_api_v1_rk_common_service_proto_depIdxs = []int32{
	2,  // 0: rk.grpc.common.v1.GCResponse.mem_stats_before_gc:type_name -> rk.grpc.common.v1.MemStats
	2,  // 1: rk.grpc.common.v1.GCResponse.mem_stats_after_gc:type_name -> rk.grpc.common.v1.MemStats
	5,  // 2: rk.grpc.common.v1.DumpConfigResponse.viper:type_name -> rk.grpc.common.v1.Viper
	6,  // 3: rk.grpc.common.v1.DumpConfigResponse.rk:type_name -> rk.grpc.common.v1.RK
	10, // 4: rk.grpc.common.v1.InfoResponse.info:type_name -> rk.grpc.common.v1.Info
	14, // 5: rk.grpc.common.v1.API.grpc:type_name -> rk.grpc.common.v1.GRPC
	15, // 6: rk.grpc.common.v1.API.gw:type_name -> rk.grpc.common.v1.GW
	13, // 7: rk.grpc.common.v1.ListAPIResponse.api:type_name -> rk.grpc.common.v1.API
	21, // 8: rk.grpc.common.v1.ReqMetricsRK.res_code:type_name -> rk.grpc.common.v1.ResCodeRK
	20, // 9: rk.grpc.common.v1.ReqResponse.metrics:type_name -> rk.grpc.common.v1.ReqMetricsRK
	0,  // 10: rk.grpc.common.v1.RkCommonService.GC:input_type -> rk.grpc.common.v1.GCRequest
	3,  // 11: rk.grpc.common.v1.RkCommonService.Config:input_type -> rk.grpc.common.v1.DumpConfigRequest
	9,  // 12: rk.grpc.common.v1.RkCommonService.Info:input_type -> rk.grpc.common.v1.InfoRequest
	7,  // 13: rk.grpc.common.v1.RkCommonService.Healthy:input_type -> rk.grpc.common.v1.HealthyRequest
	12, // 14: rk.grpc.common.v1.RkCommonService.APIS:input_type -> rk.grpc.common.v1.ListAPIRequest
	17, // 15: rk.grpc.common.v1.RkCommonService.Sys:input_type -> rk.grpc.common.v1.SysRequest
	19, // 16: rk.grpc.common.v1.RkCommonService.Req:input_type -> rk.grpc.common.v1.ReqRequest
	1,  // 17: rk.grpc.common.v1.RkCommonService.GC:output_type -> rk.grpc.common.v1.GCResponse
	4,  // 18: rk.grpc.common.v1.RkCommonService.Config:output_type -> rk.grpc.common.v1.DumpConfigResponse
	11, // 19: rk.grpc.common.v1.RkCommonService.Info:output_type -> rk.grpc.common.v1.InfoResponse
	8,  // 20: rk.grpc.common.v1.RkCommonService.Healthy:output_type -> rk.grpc.common.v1.HealthyResponse
	16, // 21: rk.grpc.common.v1.RkCommonService.APIS:output_type -> rk.grpc.common.v1.ListAPIResponse
	18, // 22: rk.grpc.common.v1.RkCommonService.Sys:output_type -> rk.grpc.common.v1.SysResponse
	22, // 23: rk.grpc.common.v1.RkCommonService.Req:output_type -> rk.grpc.common.v1.ReqResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_v1_rk_common_service_proto_init() }
func file_api_v1_rk_common_service_proto_init() {
	if File_api_v1_rk_common_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_rk_common_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Viper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAPIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*API); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GW); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAPIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqMetricsRK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCodeRK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_rk_common_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_rk_common_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_rk_common_service_proto_goTypes,
		DependencyIndexes: file_api_v1_rk_common_service_proto_depIdxs,
		MessageInfos:      file_api_v1_rk_common_service_proto_msgTypes,
	}.Build()
	File_api_v1_rk_common_service_proto = out.File
	file_api_v1_rk_common_service_proto_rawDesc = nil
	file_api_v1_rk_common_service_proto_goTypes = nil
	file_api_v1_rk_common_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RkCommonServiceClient is the client API for RkCommonService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RkCommonServiceClient interface {
	// GC Stub
	GC(ctx context.Context, in *GCRequest, opts ...grpc.CallOption) (*GCResponse, error)
	// Config Stub
	Config(ctx context.Context, in *DumpConfigRequest, opts ...grpc.CallOption) (*DumpConfigResponse, error)
	// Info Stub
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	// Healthy Stub
	Healthy(ctx context.Context, in *HealthyRequest, opts ...grpc.CallOption) (*HealthyResponse, error)
	// List API Stub
	APIS(ctx context.Context, in *ListAPIRequest, opts ...grpc.CallOption) (*ListAPIResponse, error)
	// Sys Stub
	Sys(ctx context.Context, in *SysRequest, opts ...grpc.CallOption) (*SysResponse, error)
	// Req Stub
	Req(ctx context.Context, in *ReqRequest, opts ...grpc.CallOption) (*ReqResponse, error)
}

type rkCommonServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRkCommonServiceClient(cc grpc.ClientConnInterface) RkCommonServiceClient {
	return &rkCommonServiceClient{cc}
}

func (c *rkCommonServiceClient) GC(ctx context.Context, in *GCRequest, opts ...grpc.CallOption) (*GCResponse, error) {
	out := new(GCResponse)
	err := c.cc.Invoke(ctx, "/rk.grpc.common.v1.RkCommonService/GC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkCommonServiceClient) Config(ctx context.Context, in *DumpConfigRequest, opts ...grpc.CallOption) (*DumpConfigResponse, error) {
	out := new(DumpConfigResponse)
	err := c.cc.Invoke(ctx, "/rk.grpc.common.v1.RkCommonService/Config", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkCommonServiceClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/rk.grpc.common.v1.RkCommonService/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkCommonServiceClient) Healthy(ctx context.Context, in *HealthyRequest, opts ...grpc.CallOption) (*HealthyResponse, error) {
	out := new(HealthyResponse)
	err := c.cc.Invoke(ctx, "/rk.grpc.common.v1.RkCommonService/Healthy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkCommonServiceClient) APIS(ctx context.Context, in *ListAPIRequest, opts ...grpc.CallOption) (*ListAPIResponse, error) {
	out := new(ListAPIResponse)
	err := c.cc.Invoke(ctx, "/rk.grpc.common.v1.RkCommonService/APIS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkCommonServiceClient) Sys(ctx context.Context, in *SysRequest, opts ...grpc.CallOption) (*SysResponse, error) {
	out := new(SysResponse)
	err := c.cc.Invoke(ctx, "/rk.grpc.common.v1.RkCommonService/Sys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkCommonServiceClient) Req(ctx context.Context, in *ReqRequest, opts ...grpc.CallOption) (*ReqResponse, error) {
	out := new(ReqResponse)
	err := c.cc.Invoke(ctx, "/rk.grpc.common.v1.RkCommonService/Req", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RkCommonServiceServer is the server API for RkCommonService service.
type RkCommonServiceServer interface {
	// GC Stub
	GC(context.Context, *GCRequest) (*GCResponse, error)
	// Config Stub
	Config(context.Context, *DumpConfigRequest) (*DumpConfigResponse, error)
	// Info Stub
	Info(context.Context, *InfoRequest) (*InfoResponse, error)
	// Healthy Stub
	Healthy(context.Context, *HealthyRequest) (*HealthyResponse, error)
	// List API Stub
	APIS(context.Context, *ListAPIRequest) (*ListAPIResponse, error)
	// Sys Stub
	Sys(context.Context, *SysRequest) (*SysResponse, error)
	// Req Stub
	Req(context.Context, *ReqRequest) (*ReqResponse, error)
}

// UnimplementedRkCommonServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRkCommonServiceServer struct {
}

func (*UnimplementedRkCommonServiceServer) GC(context.Context, *GCRequest) (*GCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GC not implemented")
}
func (*UnimplementedRkCommonServiceServer) Config(context.Context, *DumpConfigRequest) (*DumpConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Config not implemented")
}
func (*UnimplementedRkCommonServiceServer) Info(context.Context, *InfoRequest) (*InfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}
func (*UnimplementedRkCommonServiceServer) Healthy(context.Context, *HealthyRequest) (*HealthyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Healthy not implemented")
}
func (*UnimplementedRkCommonServiceServer) APIS(context.Context, *ListAPIRequest) (*ListAPIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method APIS not implemented")
}
func (*UnimplementedRkCommonServiceServer) Sys(context.Context, *SysRequest) (*SysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sys not implemented")
}
func (*UnimplementedRkCommonServiceServer) Req(context.Context, *ReqRequest) (*ReqResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Req not implemented")
}

func RegisterRkCommonServiceServer(s *grpc.Server, srv RkCommonServiceServer) {
	s.RegisterService(&_RkCommonService_serviceDesc, srv)
}

func _RkCommonService_GC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkCommonServiceServer).GC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rk.grpc.common.v1.RkCommonService/GC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkCommonServiceServer).GC(ctx, req.(*GCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkCommonService_Config_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DumpConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkCommonServiceServer).Config(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rk.grpc.common.v1.RkCommonService/Config",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkCommonServiceServer).Config(ctx, req.(*DumpConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkCommonService_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkCommonServiceServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rk.grpc.common.v1.RkCommonService/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkCommonServiceServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkCommonService_Healthy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkCommonServiceServer).Healthy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rk.grpc.common.v1.RkCommonService/Healthy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkCommonServiceServer).Healthy(ctx, req.(*HealthyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkCommonService_APIS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAPIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkCommonServiceServer).APIS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rk.grpc.common.v1.RkCommonService/APIS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkCommonServiceServer).APIS(ctx, req.(*ListAPIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkCommonService_Sys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkCommonServiceServer).Sys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rk.grpc.common.v1.RkCommonService/Sys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkCommonServiceServer).Sys(ctx, req.(*SysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkCommonService_Req_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkCommonServiceServer).Req(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rk.grpc.common.v1.RkCommonService/Req",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkCommonServiceServer).Req(ctx, req.(*ReqRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RkCommonService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rk.grpc.common.v1.RkCommonService",
	HandlerType: (*RkCommonServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GC",
			Handler:    _RkCommonService_GC_Handler,
		},
		{
			MethodName: "Config",
			Handler:    _RkCommonService_Config_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _RkCommonService_Info_Handler,
		},
		{
			MethodName: "Healthy",
			Handler:    _RkCommonService_Healthy_Handler,
		},
		{
			MethodName: "APIS",
			Handler:    _RkCommonService_APIS_Handler,
		},
		{
			MethodName: "Sys",
			Handler:    _RkCommonService_Sys_Handler,
		},
		{
			MethodName: "Req",
			Handler:    _RkCommonService_Req_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/rk_common_service.proto",
}
